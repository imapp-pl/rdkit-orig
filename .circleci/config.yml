version: 2.1

commands:
  build:
    description: "Build"
    steps:
      - checkout
      - run:
          name: "Environment"
          working_directory: ~/project
          command: |
            CC=${CC:-cc}
            CXX=${CXX:-cpp}
            echo CC: $CC
            echo CXX: $CXX
            $CC --version
            $CXX --version
            cmake --version
      - run:
          name: "Configure"
          working_directory: ~/project/build
          command: |
            cmake .. -DPYTHON_EXECUTABLE=$(which python3) -DCMAKE_BUILD_TYPE=$BUILD_TYPE $CMAKE_OPTIONS -DCMAKE_INSTALL_PREFIX=/usr -DRDK_INSTALL_INTREE=OFF
      - run:
          name: "Build"
          working_directory: ~/project
          command: cmake --build build -- -j4
      - run:
          name: "Install"
          working_directory: ~/project
          command: sudo cmake --build build --target install

  test:
    description: "Test"
    steps:
    - run:
        name: "Test"
        working_directory: ~/project
        command: |
          export RDBASE=`pwd`
          export QT_QPA_PLATFORM='offscreen'
          sudo chown -R builder build
          cd build
          ctest -R ${TESTS_FILTER:-'.*'} -j4 --schedule-random --output-on-failure

  package:
    description: "Make Packages"
    steps:
    - run:
          name: "Build Packages"
          working_directory: ~/project/build
          command: cpack -G "TGZ;DEB"
    - run:
        name: "Move Packages"
        working_directory: ~/package
        command: mv ~/project/build/RDKit-* .
    - store_artifacts:
        path: ~/package
        destination: package

jobs:
  linux:
    docker:
    - image: imapphub/cpp_build_tools:1.2
    environment:
      BUILD_TYPE: Release
    steps:
      - build
      - test
      - package
      - persist_to_workspace:
          root: ~/package
          paths:
            - RDKit-*

  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: package
      - run:
          name: "Publish Release on GitHub"
          command: |
            ls -all .. && ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete Release_2020_03-debs package

workflows:
  version: 2
  rdkit:
    jobs:
      - linux
      - publish-github-release:
          requires:
            - linux
          # filters:
          #   branches:
          #     ignore: /.*/
          #   tags:
          #     only: /^\d+\.\d+\.\d+$/
